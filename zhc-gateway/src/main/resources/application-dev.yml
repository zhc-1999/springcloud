server:
  port: 6001
spring:
  main:
    allow-bean-definition-overriding: true
  profiles:
    active: dev
  application:
    name: zhc-gateway
    strategy:
      # 网关策略
      gateway:
        # 开启和关闭网关订阅配置中心的动态路由策略。缺失则默认为false
        dynamic.route.enabled: true
        # 当外界传值Header的时候，网关也设置并传递同名的Header，需要决定哪个Header传递到后边的服务去。如果下面开关为true，以网关设置为优先，否则以外界传值为优先。缺失则默认为true
        header.priority: true
        # 当以网关设置为优先的时候，网关未配置Header，而外界配置了Header，仍旧忽略外界的Header。缺失则默认为true
        original.header.ignored: true
        # 启动和关闭核心策略Header传递，缺失则默认为true。当全局订阅启动时，可以关闭核心策略Header传递，这样可以节省传递数据的大小，一定程度上可以提升性能。
      #        core.header.transmission.enabled: false
      # 启动和关闭监控，一旦关闭，调用链和日志输出都将关闭。缺失则默认为false
      monitor.enabled: true
      # 启动和关闭日志输出。缺失则默认为false
      logger.debug.enabled: true
      # 启动和关闭Header传递的Debug日志打印，注意：每调用一次都会打印一次，会对性能有所影响，建议压测环境和生产环境关闭。缺失则默认为false
      rest.intercept.debug.enabled: true
      # 路由策略的时候，对REST方式调用拦截的时候（支持Feign、RestTemplate或者WebClient调用），希望把来自外部自定义的Header参数（用于框架内置上下文Header，例如：trace-id, span-id等）传递到服务里，那么配置如下值。如果多个用“;”分隔，不允许出现空格
      context.request.headers: trace-id;span-id;
      # 路由策略的时候，对REST方式调用拦截的时候（支持Feign、RestTemplate或者WebClient调用），希望把来自外部自定义的Header参数（用于业务系统自定义Header，例如：mobile）传递到服务里，那么配置如下值。如果多个用“;”分隔，不允许出现空格
      business.request.headers: ID;
      # 版本故障转移，即无法找到相应版本的服务实例，路由到老的稳定版本的实例。其作用是防止蓝绿灰度版本发布人为设置错误，或者对应的版本实例发生灾难性的全部下线，导致流量有损
      # 启动和关闭版本故障转移。缺失则默认为false
  #      version.failover.enabled: true

  # Cloud 配置
  cloud:
    # gateway 网关配置
    gateway:
      discovery:
        locator:
          #使用服务发现路由
          enabled: true
          lower-case-service-id: true
    nacos:
      # nacos discovery 配置
      discovery:
        enabled: true
        group: ZHC_GROUP
        metadata:
          env: env1
          group: ZHC_GROUP
          region: dev
          version: 1.0
          zone: zone1
        namespace: ZHC_GROUP
        username: nacos
        password: nacos
        register-enabled: true
        server-addr: 127.0.0.1:8848
        service: ZHC-GATEWAY-SERVICE

  redis:
    cluster:
      nodes: ''
    database: 1
    host: 192.168.171.178
    password: ywjx
    pool:
      max-active: 64
      max-idle: 16
      max-total: 64
      max-wait: 500
      min-idle: 8
    port: 6379
    sentinel:
      master: ''
      nodes: ''
redisson:
  cluster:
    addresses: ''
  sentinel:
    addresses: ''
  single:
    addresses: redis://192.168.171.178:6379
cache:
  prefix: zhc-gateway